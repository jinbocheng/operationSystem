{\rtf1\ansi\ansicpg936\cocoartf2758
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\froman\fcharset0 TimesNewRomanPSMT;\f1\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\li640\fi640\sl480\qj\partightenfactor0

\f0\fs32 \cf2 \expnd0\expndtw0\kerning0
#![no_std]
\f1\fs28 \

\f0\fs32 #![no_main]
\f1\fs28 \

\f0\fs32 \'a0
\f1\fs28 \

\f0\fs32 #[macro_use]
\f1\fs28 \

\f0\fs32 extern crate user_lib;
\f1\fs28 \

\f0\fs32 \'a0
\f1\fs28 \

\f0\fs32 use user_lib::\{
\f1\fs28 \

\f0\fs32 \'a0\'a0\'a0 fork,
\f1\fs28 \

\f0\fs32 \'a0\'a0\'a0 wait,
\f1\fs28 \

\f0\fs32 \'a0\'a0\'a0 exec,
\f1\fs28 \

\f0\fs32 \'a0\'a0\'a0 yield_,
\f1\fs28 \

\f0\fs32 \};
\f1\fs28 \

\f0\fs32 \'a0
\f1\fs28 \

\f0\fs32 #[no_mangle]
\f1\fs28 \

\f0\fs32 fn main() -> i32 \{
\f1\fs28 \

\f0\fs32 \'a0\'a0\'a0 if fork() == 0 \{
\f1\fs28 \

\f0\fs32 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 exec("user_shell\\0");
\f1\fs28 \

\f0\fs32 \'a0\'a0\'a0 \} else \{
\f1\fs28 \

\f0\fs32 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 loop \{
\f1\fs28 \

\f0\fs32 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 let mut exit_code: i32 = 0;
\f1\fs28 \

\f0\fs32 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 let pid = wait(&mut exit_code);
\f1\fs28 \

\f0\fs32 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 if pid == -1 \{
\f1\fs28 \

\f0\fs32 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 yield_();
\f1\fs28 \

\f0\fs32 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 continue;
\f1\fs28 \

\f0\fs32 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \}
\f1\fs28 \

\f0\fs32 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 println!(
\f1\fs28 \

\f0\fs32 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 "[initproc] Released a zombie process, pid=\{\}, exit_code=\{\}",
\f1\fs28 \

\f0\fs32 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 pid,
\f1\fs28 \

\f0\fs32 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 exit_code,
\f1\fs28 \

\f0\fs32 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 );
\f1\fs28 \

\f0\fs32 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 \}
\f1\fs28 \

\f0\fs32 \'a0\'a0\'a0 \}
\f1\fs28 \

\f0\fs32 \'a0\'a0\'a0 0
\f1\fs28 \

\f0\fs32 \}
\f1\fs28 \
}